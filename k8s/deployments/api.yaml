apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastify-api
  namespace: fastify-api
  labels:
    app: fastify-api
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fastify-api
  template:
    metadata:
      labels:
        app: fastify-api
        version: v1
    spec:
      containers:
      - name: fastify-api
        image: fastify-api:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: GRACEFUL_SHUTDOWN_TIMEOUT
          value: "30000"
        # Database configuration (adjust as needed)
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: fastify-api-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: fastify-api-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: fastify-api-config
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: fastify-api-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: fastify-api-secrets
              key: db_password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: fastify-api-service
  namespace: fastify-api
  labels:
    app: fastify-api
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: fastify-api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fastify-api-config
  namespace: fastify-api
data:
  db_host: "host.kind.internal"
  db_port: "3306"
  db_name: "api"
---
apiVersion: v1
kind: Secret
metadata:
  name: fastify-api-secrets
  namespace: fastify-api
type: Opaque
data:
  db_user: ZGJfdXNlcg==  # base64 encoded: db_user
  db_password: ZGJfcGFzcw==  # base64 encoded: db_pass
  db_root_password: cm9vdF9wYXNz  # base64 encoded: root_pass
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastify-api-ingress
  namespace: fastify-api
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"  # Changed to false for local testing
spec:
  ingressClassName: nginx
  tls:
    - hosts: [fastify-api.localtest.me]
      secretName: fastify-api-tls
  rules:
    - host: fastify-api.localtest.me
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: fastify-api-service
                port:
                  number: 80
